import clases.ToothException;
import clases.direction;
import java.sql.*;
import java.util.logging.*;
import javax.swing.ImageIcon;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SEGsoft
 */
public class verCitas extends javax.swing.JDialog {

    /**
     * Creates new form verCitas
     */
    public verCitas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/Image/Icono1.png")).getImage());
        conectar();
        m=(DefaultTableModel) tblCita.getModel();
        jdFecha.getDateEditor().setEnabled(false);
    }
    
    public void conectar(){
        direction dir = new direction();
        dir.readTxt("C:\\dir.ini");
        String dbURL="jdbc:ucanaccess://"+dir.getDir();
        try {
            cn=DriverManager.getConnection(dbURL,"","");
            System.out.println("Conectado");
        } catch (SQLException ex) {
            Logger.getLogger(nPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCita = new javax.swing.JTable();
        lblFecha = new javax.swing.JLabel();
        jdFecha = new com.toedter.calendar.JDateChooser();
        btnVerCitas = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmRegresar = new javax.swing.JMenu();
        jmBorrar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ToothCenter - Ver Citas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 102, 204), null));

        tblCita.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tblCita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paciente", "Fecha", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCitaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCita);

        lblFecha.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lblFecha.setText("Fecha:");

        jdFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdFechaKeyPressed(evt);
            }
        });

        btnVerCitas.setBackground(new java.awt.Color(255, 255, 255));
        btnVerCitas.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnVerCitas.setText("Ver Citas");
        btnVerCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerCitasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jdFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnVerCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jdFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVerCitas, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(lblFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 102, 204), null));

        jmRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/back.png"))); // NOI18N
        jmRegresar.setToolTipText("Regresar");
        jmRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmRegresarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmRegresar);

        jmBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/if_basket_1814090 (1).png"))); // NOI18N
        jmBorrar.setToolTipText("Eliminar");
        jmBorrar.setEnabled(false);
        jmBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmBorrarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmBorrar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCitaMouseClicked
        jmBorrar.setEnabled(true);
    }//GEN-LAST:event_tblCitaMouseClicked

    private void jdFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdFechaKeyPressed

    }//GEN-LAST:event_jdFechaKeyPressed

    private void validarBtn() throws ToothException{
        if(jdFecha.getDate() == null){
            throw new ToothException("Â¡Error!\nIntroduce una fecha.");
        }
    }
    
    private void btnVerCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerCitasActionPerformed
        try{
            validarBtn();
            fecha=jdFecha.getDate().getDate()+"/"+(jdFecha.getDate().getMonth()+1)+"/"+(jdFecha.getDate().getYear()+1900);
            llenartabla();
        }catch(ToothException e){
            showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnVerCitasActionPerformed

    private void jmRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmRegresarMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_jmRegresarMouseClicked

    private void jmBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmBorrarMouseClicked
        eliminar();
    }//GEN-LAST:event_jmBorrarMouseClicked

    public void eliminar(){
        if(jmBorrar.isEnabled()){
            if(javax.swing.JOptionPane.showConfirmDialog(rootPane,"Seguro que deseas eliminar?")!=0){
                return;
            }else{
                String cad="";  
                try{
                    int c=tblCita.getSelectedRow();
                    Statement stmt=cn.createStatement();
                    cad="delete * from Citas where Fecha=DateValue('"+fecha+"') and Hora='"+m.getValueAt(c, 2)+"'";
                    stmt.executeUpdate(cad);
                    stmt.close();    
                    m.removeRow(tblCita.getSelectedRow());
                }catch(SQLException ex){
                    showMessageDialog(this,"NO SE PUDO ELIMINAR");
                }
            }
        }
    }//eliminar
    
    public void llenartabla(){
        try{
            Statement stmt=cn.createStatement();
            stmt.execute("select*from Citas where Fecha=DateValue('"+fecha+"');");
            ResultSet rs=stmt.getResultSet();
            m.setRowCount(0);
            Object  O[]=new Object[3];
            if(rs!=null){
                while(rs.next()){    
                    O[0]=rs.getString("paciente");        
                    O[1]=rs.getDate("fecha");
                    O[2]=rs.getString("hora");
                    m.addRow(O);
                }
            }else{
                showMessageDialog(this,"Error");
            }
            stmt.close();
        }catch(SQLException ex){
            showMessageDialog(this,ex.getMessage());
        }
    }

    String fecha;
    private DefaultTableModel m;
    private java.sql.Connection cn;
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerCitas;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdFecha;
    private javax.swing.JMenu jmBorrar;
    private javax.swing.JMenu jmRegresar;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTable tblCita;
    // End of variables declaration//GEN-END:variables
}
