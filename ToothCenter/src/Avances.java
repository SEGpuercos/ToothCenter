
import clases.Conexion;
import clases.ToothException;
import clases.direction;
import java.awt.*;
import java.awt.Image;
import java.io.File;
import java.io.*;
import java.sql.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import static javax.swing.JOptionPane.*;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author SEGsoft
 */
public class Avances extends javax.swing.JFrame {

    /**
     * Creates new form Avances
     */
    public Avances() {
        initComponents();
        conectar();
        variable=1;
        this.setIconImage(new ImageIcon(getClass().getResource("/Image/Icono1.png")).getImage());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        btnImg1 = new javax.swing.JButton();
        btnImg2 = new javax.swing.JButton();
        btnImg3 = new javax.swing.JButton();
        btnImg4 = new javax.swing.JButton();
        btnImg5 = new javax.swing.JButton();
        btnImg6 = new javax.swing.JButton();
        btnImg7 = new javax.swing.JButton();
        btnImg8 = new javax.swing.JButton();
        btnImg9 = new javax.swing.JButton();
        btnImg10 = new javax.swing.JButton();
        btnImg11 = new javax.swing.JButton();
        btnImg12 = new javax.swing.JButton();
        btnImg13 = new javax.swing.JButton();
        btnImg14 = new javax.swing.JButton();
        btnImg15 = new javax.swing.JButton();
        lblImgGrande = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmAtras = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1500, 100));
        jPanel2.setRequestFocusEnabled(false);

        btnImg1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg1.setText("Img 1");
        btnImg1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg1MouseClicked(evt);
            }
        });
        btnImg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImg1ActionPerformed(evt);
            }
        });
        btnImg1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnImg1KeyTyped(evt);
            }
        });

        btnImg2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg2.setText("Img 2");
        btnImg2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg2MouseClicked(evt);
            }
        });
        btnImg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImg2ActionPerformed(evt);
            }
        });

        btnImg3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg3.setText("Img 3");
        btnImg3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg3MouseClicked(evt);
            }
        });

        btnImg4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg4.setText("Img 4");
        btnImg4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg4MouseClicked(evt);
            }
        });

        btnImg5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg5.setText("Img 5");
        btnImg5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg5MouseClicked(evt);
            }
        });

        btnImg6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg6.setText("Img 6");
        btnImg6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg6MouseClicked(evt);
            }
        });

        btnImg7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg7.setText("Img 7");
        btnImg7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg7MouseClicked(evt);
            }
        });
        btnImg7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImg7ActionPerformed(evt);
            }
        });

        btnImg8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg8.setText("Img 8");
        btnImg8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg8MouseClicked(evt);
            }
        });

        btnImg9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg9.setText("Img9");
        btnImg9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg9MouseClicked(evt);
            }
        });

        btnImg10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg10.setText("Img 10");
        btnImg10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg10MouseClicked(evt);
            }
        });

        btnImg11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg11.setText("Img 11");
        btnImg11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg11MouseClicked(evt);
            }
        });

        btnImg12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg12.setText("Img 12");
        btnImg12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg12MouseClicked(evt);
            }
        });

        btnImg13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg13.setText("Img 13");
        btnImg13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg13MouseClicked(evt);
            }
        });

        btnImg14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg14.setText("Img 14");
        btnImg14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg14MouseClicked(evt);
            }
        });

        btnImg15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnImg15.setText("Img 15");
        btnImg15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImg15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnImg15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnImg3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jScrollPane1.setViewportView(jPanel2);

        lblImgGrande.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblImgGrande.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImgGrande.setText("Imagen");
        lblImgGrande.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(lblImgGrande, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(lblImgGrande, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 89, Short.MAX_VALUE))
        );

        jmAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/back.png"))); // NOI18N
        jmAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmAtrasMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmAtras);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void conectar(){
        con =  new Conexion();
        cn = con.getConection();
    }
    private void btnImg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImg2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImg2ActionPerformed

    private void btnImg7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImg7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImg7ActionPerformed
    
    private void cargarimagenes()
    {
        try{
            
            Statement stmt=cn.createStatement();
            stmt.execute("select*from Imagenes where Id_paciente="+id);
            
            ResultSet rs=stmt.getResultSet();
           
            if(rs!=null)
            {
                
                while(rs.next()){
                    
                   i1=rs.getString("Img1");
                   if(i1.equals("")){}else{
                   ImageIcon icon=new ImageIcon(i1);
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg1.getWidth(), btnImg1.getHeight(), Image.SCALE_DEFAULT));
                    btnImg1.setText(null);
                    btnImg1.setIcon(icono);
                   }
                   
                    i2=rs.getString("Img2");
                    if(i2.equals("")){}else{
                   ImageIcon icon2=new ImageIcon(i2);
                    Icon icono2 = new ImageIcon(icon2.getImage().getScaledInstance(btnImg2.getWidth(), btnImg2.getHeight(), Image.SCALE_DEFAULT));
                    btnImg2.setText(null);
                    btnImg2.setIcon(icono2);
                    }
                    
                    
                    i3=rs.getString("Img3");
                    if(i3.equals("")){}else{
                   ImageIcon icon3=new ImageIcon(i3);
                    Icon icono3 = new ImageIcon(icon3.getImage().getScaledInstance(btnImg3.getWidth(), btnImg3.getHeight(), Image.SCALE_DEFAULT));
                    btnImg3.setText(null);
                    btnImg3.setIcon(icono3);
                    }
                    
                    i4=rs.getString("Img4");
                    if(i4.equals("")){}else{
                   ImageIcon icon4=new ImageIcon(i4);
                    Icon icono4 = new ImageIcon(icon4.getImage().getScaledInstance(btnImg4.getWidth(), btnImg4.getHeight(), Image.SCALE_DEFAULT));
                    btnImg4.setText(null);
                    btnImg4.setIcon(icono4);
                    }
                    
                    i5=rs.getString("Img5");
                    if(i5.equals("")){}else{
                   ImageIcon icon5=new ImageIcon(i5);
                    Icon icono5 = new ImageIcon(icon5.getImage().getScaledInstance(btnImg5.getWidth(), btnImg5.getHeight(), Image.SCALE_DEFAULT));
                    btnImg5.setText(null);
                    btnImg5.setIcon(icono5);
                    }
                    
                    i6=rs.getString("Img6");
                    if(i6.equals("")){}else{
                   ImageIcon icon6=new ImageIcon(i6);
                    Icon icono6 = new ImageIcon(icon6.getImage().getScaledInstance(btnImg6.getWidth(), btnImg6.getHeight(), Image.SCALE_DEFAULT));
                    btnImg6.setText(null);
                    btnImg6.setIcon(icono6);
                    }
                    
                    i7=rs.getString("Img7");
                    if(i7.equals("")){}else{
                   ImageIcon icon7=new ImageIcon(i7);
                    Icon icono7 = new ImageIcon(icon7.getImage().getScaledInstance(btnImg7.getWidth(), btnImg7.getHeight(), Image.SCALE_DEFAULT));
                    btnImg7.setText(null);
                    btnImg7.setIcon(icono7);
                    }
                    
                    i8=rs.getString("Img8");
                    if(i8.equals("")){}else{
                   ImageIcon icon8=new ImageIcon(i8);
                    Icon icono8 = new ImageIcon(icon8.getImage().getScaledInstance(btnImg8.getWidth(), btnImg8.getHeight(), Image.SCALE_DEFAULT));
                    btnImg8.setText(null);
                    btnImg8.setIcon(icono8);
                    }
                    
                    i9=rs.getString("Img9");
                    if(i9.equals("")){}else{
                   ImageIcon icon9=new ImageIcon(i9);
                    Icon icono9 = new ImageIcon(icon9.getImage().getScaledInstance(btnImg9.getWidth(), btnImg9.getHeight(), Image.SCALE_DEFAULT));
                    btnImg9.setText(null);
                    btnImg9.setIcon(icono9);
                    }
                    
                    i10=rs.getString("Img10");
                    if(i10.equals("")){}else{
                   ImageIcon icon10=new ImageIcon(i10);
                    Icon icono10 = new ImageIcon(icon10.getImage().getScaledInstance(btnImg10.getWidth(), btnImg10.getHeight(), Image.SCALE_DEFAULT));
                    btnImg10.setText(null);
                    btnImg10.setIcon(icono10);
                    }
                    
                    i11=rs.getString("Img11");
                    if(i11.equals("")){}else{
                   ImageIcon icon11=new ImageIcon(i11);
                    Icon icono11 = new ImageIcon(icon11.getImage().getScaledInstance(btnImg11.getWidth(), btnImg11.getHeight(), Image.SCALE_DEFAULT));
                    btnImg11.setText(null);
                    btnImg11.setIcon(icono11);
                    }
                    
                    i12=rs.getString("Img12");
                    if(i12.equals("")){}else{
                   ImageIcon icon12=new ImageIcon(i12);
                    Icon icono12 = new ImageIcon(icon12.getImage().getScaledInstance(btnImg12.getWidth(), btnImg12.getHeight(), Image.SCALE_DEFAULT));
                    btnImg12.setText(null);
                    btnImg12.setIcon(icono12);
                    }
                    
                    i13=rs.getString("Img13");
                    if(i13.equals("")){}else{
                   ImageIcon icon13=new ImageIcon(i13);
                    Icon icono13 = new ImageIcon(icon13.getImage().getScaledInstance(btnImg13.getWidth(), btnImg13.getHeight(), Image.SCALE_DEFAULT));
                    btnImg13.setText(null);
                    btnImg13.setIcon(icono13);
                    }
                    
                    i14=rs.getString("Img14");
                    if(i14.equals("")){}else{
                   ImageIcon icon14=new ImageIcon(i14);
                    Icon icono14 = new ImageIcon(icon14.getImage().getScaledInstance(btnImg14.getWidth(), btnImg14.getHeight(), Image.SCALE_DEFAULT));
                    btnImg14.setText(null);
                    btnImg14.setIcon(icono14);
                    }
                    
                    i15=rs.getString("Img15");
                    if(i15.equals("")){}else{
                   ImageIcon icon15=new ImageIcon(i15);
                    Icon icono15 = new ImageIcon(icon15.getImage().getScaledInstance(btnImg15.getWidth(), btnImg15.getHeight(), Image.SCALE_DEFAULT));
                    btnImg15.setText(null);
                    btnImg15.setIcon(icono15);
                    }
                }
            }else{showMessageDialog(this,"Error");}
            
            stmt.close();
        }catch(SQLException ex){showMessageDialog(this,ex.getMessage());}
    }
    private void borrar() 
     {String cad="";
        try{
                    
                    Statement stmt=cn.createStatement();
                    cad="delete * from Imagenes where Id_paciente="+id;
                    //showMessageDialog(this,cad);
                    stmt.executeUpdate(cad);
                    stmt.close();    
                   
                }catch(SQLException ex){
                    showMessageDialog(this,"NO SE PUDO ELIMINAR");
                }
        }
    private void Guardar()
    {
        String cad="";
        try{
            borrar();
            Statement stmt=cn.createStatement();
            cad="insert into Imagenes(Id_paciente,Img1,Img2,Img3,Img4,Img5,Img6,Img7,Img8,Img9,Img10,Img11,Img12,Img13,Img14,Img15) values ("+id+",'"+i1+"','"+i2+"','"+i3+"','"+i4+"','"+i5+"','"+i6+"','"+i7+"','"+i8+"','"+i9+"','"+i10+"','"+i11+"','"+i12+"','"+i13+"','"+i14+"','"+i15+"');";
            //showMessageDialog(this,cad);
            stmt.executeUpdate(cad);
            stmt.close(); 
            cargarimagenes();
        }catch(SQLException ex){
            showMessageDialog(this,"Error al insertar");
        }catch(ToothException e){
            showMessageDialog(this, e.getMessage());
        }
        
    }
    private void btnImg1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg1MouseClicked

        if ((evt.getModifiers() & 4) !=0&&btnImg1.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i1="";
            btnImg1.setIcon(null);
            btnImg1.setText("Img1");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg1.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f1 = ventana.jfcImagen.getSelectedFile();
                i1=f1.toString();
                try{
                    ImageIcon icon=new ImageIcon(f1.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg1.getWidth(), btnImg1.getHeight(), Image.SCALE_DEFAULT));
                    btnImg1.setText(null);
                    btnImg1.setIcon(icono);
                   Guardar();
                   
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i1.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg1MouseClicked

    private void btnImg2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg2MouseClicked
       if ((evt.getModifiers() & 4) !=0&&btnImg2.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i2="";
            btnImg2.setIcon(null);
            btnImg2.setText("Img2");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg2.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f2 = ventana.jfcImagen.getSelectedFile();
                i2=f2.toString();
                try{
                    ImageIcon icon=new ImageIcon(f2.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg2.getWidth(), btnImg2.getHeight(), Image.SCALE_DEFAULT));
                    btnImg2.setText(null);
                    btnImg2.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i2.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg2MouseClicked

    private void btnImg3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg3MouseClicked
        if ((evt.getModifiers() & 4) !=0&&btnImg3.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i3="";
            btnImg3.setIcon(null);
            btnImg3.setText("Img3");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg3.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f3 = ventana.jfcImagen.getSelectedFile();
                i3=f3.toString();
                try{
                    ImageIcon icon=new ImageIcon(f3.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg3.getWidth(), btnImg3.getHeight(), Image.SCALE_DEFAULT));
                    btnImg3.setText(null);
                    btnImg3.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i3.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg3MouseClicked

    private void btnImg4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg4MouseClicked
       if ((evt.getModifiers() & 4) !=0&&btnImg4.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i4="";
            btnImg4.setIcon(null);
            btnImg4.setText("Img4");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg4.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f4 = ventana.jfcImagen.getSelectedFile();
                i4=f4.toString();
                try{
                    ImageIcon icon=new ImageIcon(f4.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg4.getWidth(), btnImg4.getHeight(), Image.SCALE_DEFAULT));
                    btnImg4.setText(null);
                    btnImg4.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i4.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg4MouseClicked

    private void btnImg5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg5MouseClicked
        if ((evt.getModifiers() & 4) !=0&&btnImg5.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i5="";
            btnImg5.setIcon(null);
            btnImg5.setText("Img5");
            Guardar();
        }else{return;}
        
        return;
            }
        
        if(btnImg5.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f5 = ventana.jfcImagen.getSelectedFile();
                i5=f5.toString();
                try{
                    ImageIcon icon=new ImageIcon(f5.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg5.getWidth(), btnImg5.getHeight(), Image.SCALE_DEFAULT));
                    btnImg5.setText(null);
                    btnImg5.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i5.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg5MouseClicked

    private void btnImg6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg6MouseClicked
        
        if ((evt.getModifiers() & 4) !=0&&btnImg6.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i6="";
            btnImg6.setIcon(null);
            btnImg6.setText("Img6");
            Guardar();
        }else{return;}
        
        return;
            }
        
        if(btnImg6.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f6 = ventana.jfcImagen.getSelectedFile();
                i6=f6.toString();
                try{
                    ImageIcon icon=new ImageIcon(f6.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg6.getWidth(), btnImg6.getHeight(), Image.SCALE_DEFAULT));
                    btnImg6.setText(null);
                    btnImg6.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i6.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg6MouseClicked

    private void btnImg7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg7MouseClicked
        if ((evt.getModifiers() & 4) !=0&&btnImg7.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i7="";
            btnImg7.setIcon(null);
            btnImg7.setText("Img7");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg7.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f7 = ventana.jfcImagen.getSelectedFile();
                i7=f7.toString();
                try{
                    ImageIcon icon=new ImageIcon(f7.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg7.getWidth(), btnImg7.getHeight(), Image.SCALE_DEFAULT));
                    btnImg7.setText(null);
                    btnImg7.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i7.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg7MouseClicked

    private void btnImg8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg8MouseClicked
        if ((evt.getModifiers() & 4) !=0&&btnImg8.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i8="";
            btnImg8.setIcon(null);
            btnImg8.setText("Img8");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg8.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f8 = ventana.jfcImagen.getSelectedFile();
                i8=f8.toString();
                try{
                    ImageIcon icon=new ImageIcon(f8.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg8.getWidth(), btnImg8.getHeight(), Image.SCALE_DEFAULT));
                    btnImg8.setText(null);
                    btnImg8.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i8.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg8MouseClicked

    private void btnImg9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg9MouseClicked
       
        if ((evt.getModifiers() & 4) !=0&&btnImg9.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i9="";
            btnImg9.setIcon(null);
            btnImg9.setText("Img9");
            Guardar();
        }else{return;}
        
        return;
            }
        
        if(btnImg9.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f9 = ventana.jfcImagen.getSelectedFile();
                i9=f9.toString();
                try{
                    ImageIcon icon=new ImageIcon(f9.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg9.getWidth(), btnImg9.getHeight(), Image.SCALE_DEFAULT));
                    btnImg9.setText(null);
                    btnImg9.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i9.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg9MouseClicked

    private void btnImg10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg10MouseClicked
       
        if ((evt.getModifiers() & 4) !=0&&btnImg10.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i10="";
            btnImg10.setIcon(null);
            btnImg10.setText("Img10");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg10.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f10 = ventana.jfcImagen.getSelectedFile();
                i10=f10.toString();
                try{
                    ImageIcon icon=new ImageIcon(f10.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg10.getWidth(), btnImg10.getHeight(), Image.SCALE_DEFAULT));
                    btnImg10.setText(null);
                    btnImg10.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i10.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg10MouseClicked

    private void btnImg11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg11MouseClicked
       if ((evt.getModifiers() & 4) !=0&&btnImg11.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i11="";
            btnImg11.setIcon(null);
            btnImg11.setText("Img11");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg11.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f11 = ventana.jfcImagen.getSelectedFile();
                i11=f11.toString();
                try{
                    ImageIcon icon=new ImageIcon(f11.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg11.getWidth(), btnImg11.getHeight(), Image.SCALE_DEFAULT));
                    btnImg11.setText(null);
                    btnImg11.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i11.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg11MouseClicked

    private void btnImg12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg12MouseClicked
        if ((evt.getModifiers() & 4) !=0&&btnImg12.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i12="";
            btnImg12.setIcon(null);
            btnImg12.setText("Img12");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg12.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f12 = ventana.jfcImagen.getSelectedFile();
                i12=f12.toString();
                try{
                    ImageIcon icon=new ImageIcon(f12.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg12.getWidth(), btnImg12.getHeight(), Image.SCALE_DEFAULT));
                    btnImg12.setText(null);
                    btnImg12.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i12.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg12MouseClicked

    private void btnImg13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg13MouseClicked
       if ((evt.getModifiers() & 4) !=0&&btnImg13.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i13="";
            btnImg13.setIcon(null);
            btnImg13.setText("Img13");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg13.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f13 = ventana.jfcImagen.getSelectedFile();
                i13=f13.toString();
                try{
                    ImageIcon icon=new ImageIcon(f13.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg13.getWidth(), btnImg13.getHeight(), Image.SCALE_DEFAULT));
                    btnImg13.setText(null);
                    btnImg13.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i13.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg13MouseClicked

    private void btnImg14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg14MouseClicked
        
        if ((evt.getModifiers() & 4) !=0&&btnImg14.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i14="";
            btnImg14.setIcon(null);
            btnImg14.setText("Img14");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg14.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f14 = ventana.jfcImagen.getSelectedFile();
                i14=f14.toString();
                try{
                    ImageIcon icon=new ImageIcon(f14.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg14.getWidth(), btnImg14.getHeight(), Image.SCALE_DEFAULT));
                    btnImg14.setText(null);
                    btnImg14.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i14.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg14MouseClicked

    private void btnImg15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImg15MouseClicked
        if ((evt.getModifiers() & 4) !=0&&btnImg15.getIcon()!=null){
                 Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres Eliminar?","Eliminar Imagen",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            i15="";
            btnImg15.setIcon(null);
            btnImg15.setText("Img15");
            Guardar();
        }else{return;}
        
        return;
            }
        if(btnImg15.getIcon()==null){
            int resultado;
            CargarFoto ventana=new CargarFoto();
            FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
            ventana.jfcImagen.setFileFilter(filtro);
            resultado=ventana.jfcImagen.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION == resultado){
                f15 = ventana.jfcImagen.getSelectedFile();
                i15=f15.toString();
                try{
                    ImageIcon icon=new ImageIcon(f15.toString());
                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(btnImg15.getWidth(), btnImg15.getHeight(), Image.SCALE_DEFAULT));
                    btnImg15.setText(null);
                    btnImg15.setIcon(icono);
                    Guardar();
                }catch(Exception e){
                    showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
                }
            }            
        }else{
            ImageIcon icon= new ImageIcon(i15.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImgGrande.getWidth(), lblImgGrande.getHeight(), Image.SCALE_DEFAULT));
            lblImgGrande.setText(null);
            lblImgGrande.setIcon(icono);
        }
    }//GEN-LAST:event_btnImg15MouseClicked

    private void jmAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmAtrasMouseClicked
        this.dispose();
    }//GEN-LAST:event_jmAtrasMouseClicked

    private void btnImg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImg1ActionPerformed
        
    }//GEN-LAST:event_btnImg1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(variable==1)
        {
          cargarimagenes();
          variable++;
        }
    }//GEN-LAST:event_formWindowActivated

    private void btnImg1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnImg1KeyTyped
        
    }//GEN-LAST:event_btnImg1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Avances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Avances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Avances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Avances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Avances().setVisible(true);
            }
        });
    }
    String i1="",i2="",i3="",i4="",i5="",i6="",i7="",i8="",i9="",i10="",i11="",i12="",i13="",i14="",i15="";
    int id,variable;
    File f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15;
    private Connection cn;
    Conexion con;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImg1;
    private javax.swing.JButton btnImg10;
    private javax.swing.JButton btnImg11;
    private javax.swing.JButton btnImg12;
    private javax.swing.JButton btnImg13;
    private javax.swing.JButton btnImg14;
    private javax.swing.JButton btnImg15;
    private javax.swing.JButton btnImg2;
    private javax.swing.JButton btnImg3;
    private javax.swing.JButton btnImg4;
    private javax.swing.JButton btnImg5;
    private javax.swing.JButton btnImg6;
    private javax.swing.JButton btnImg7;
    private javax.swing.JButton btnImg8;
    private javax.swing.JButton btnImg9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jmAtras;
    private javax.swing.JLabel lblImgGrande;
    // End of variables declaration//GEN-END:variables
}
