
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import static javax.swing.JOptionPane.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author edson
 */
public class NuevaCita extends javax.swing.JFrame {

    /**
     * Creates new form NuevaCita
     */
    public NuevaCita() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setIconImage(new ImageIcon(getClass().getResource("/Image/Icono1.png")).getImage());
        tc=(DefaultTableModel) tblcita.getModel();
        tcargos=(DefaultTableModel) tblcargos.getModel();
        tabonos=(DefaultTableModel) tblabonos.getModel();
        bloquearcampos();
        Calendar fecha = new GregorianCalendar();
        int ano = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH)+1;
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        fechaactual=dia+"/"+mes+"/"+ano;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        lbltotalc = new javax.swing.JPanel();
        lblTelefono = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblabonos = new javax.swing.JTable();
        txtTelefono = new javax.swing.JTextField();
        btnAgendar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblcargos = new javax.swing.JTable();
        lblEdad = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblTelefono2 = new javax.swing.JLabel();
        lblDebe = new javax.swing.JLabel();
        txtdebe = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCargar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblcita = new javax.swing.JTable();
        btnAbonar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttotalc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txttotala = new javax.swing.JTextField();
        btnAsistio = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNoA = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiag = new javax.swing.JTextArea();
        lblMsgTel = new javax.swing.JLabel();
        lblMsgNombre = new javax.swing.JLabel();
        lblMsgEdad = new javax.swing.JLabel();
        lblFoto = new javax.swing.JLabel();
        btnCargarFoto = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmRegresar = new javax.swing.JMenu();
        jmEditar = new javax.swing.JMenu();
        jmGuardar = new javax.swing.JMenu();
        jmHistorial = new javax.swing.JMenu();
        jmHist = new javax.swing.JMenu();
        jmAvances = new javax.swing.JMenu();
        jmOdontograma = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ToothCenter");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbltotalc.setBackground(new java.awt.Color(255, 255, 255));
        lbltotalc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbltotalcMouseClicked(evt);
            }
        });

        lblTelefono.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lblTelefono.setText("Telefono");

        tblabonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripcion", "Monto", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblabonos);
        if (tblabonos.getColumnModel().getColumnCount() > 0) {
            tblabonos.getColumnModel().getColumn(0).setResizable(false);
            tblabonos.getColumnModel().getColumn(1).setResizable(false);
            tblabonos.getColumnModel().getColumn(2).setResizable(false);
        }

        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        btnAgendar.setBackground(new java.awt.Color(255, 255, 255));
        btnAgendar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnAgendar.setText("Agendar cita");
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });

        tblcargos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripcion", "Monto", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblcargos);
        if (tblcargos.getColumnModel().getColumnCount() > 0) {
            tblcargos.getColumnModel().getColumn(0).setResizable(false);
            tblcargos.getColumnModel().getColumn(1).setResizable(false);
            tblcargos.getColumnModel().getColumn(2).setResizable(false);
        }

        lblEdad.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lblEdad.setText("Edad");

        txtEdad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel3.setText("Abonos");

        lblTelefono2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lblTelefono2.setText("Comentarios");

        lblDebe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDebe.setText("Debe  $");

        txtdebe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtdebe.setEnabled(false);
        txtdebe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdebeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel1.setText("Proxima cita");

        btnCargar.setBackground(new java.awt.Color(255, 255, 255));
        btnCargar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCargar.setText("Cargar");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        tblcita.setBackground(new java.awt.Color(49, 49, 190));
        tblcita.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblcita.setForeground(new java.awt.Color(255, 255, 255));
        tblcita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblcita.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tblcita.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblcita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcitaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblcita);
        if (tblcita.getColumnModel().getColumnCount() > 0) {
            tblcita.getColumnModel().getColumn(0).setResizable(false);
            tblcita.getColumnModel().getColumn(1).setResizable(false);
        }

        btnAbonar.setBackground(new java.awt.Color(255, 255, 255));
        btnAbonar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnAbonar.setText("Abonar");
        btnAbonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbonarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel2.setText("Cargos");

        lblNombre.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        lblNombre.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setText("Total $");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        txttotalc.setEnabled(false);
        txttotalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalcActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setText("Total $");

        txttotala.setEnabled(false);
        txttotala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalaActionPerformed(evt);
            }
        });

        btnAsistio.setBackground(new java.awt.Color(255, 255, 255));
        btnAsistio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnAsistio.setText("Asistio");
        btnAsistio.setEnabled(false);
        btnAsistio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsistioActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar cita");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNoA.setBackground(new java.awt.Color(255, 255, 255));
        btnNoA.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnNoA.setText("No asistio");
        btnNoA.setEnabled(false);
        btnNoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoAActionPerformed(evt);
            }
        });

        txtDiag.setColumns(20);
        txtDiag.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtDiag.setRows(5);
        jScrollPane1.setViewportView(txtDiag);

        lblMsgTel.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblMsgTel.setForeground(new java.awt.Color(102, 102, 102));

        lblMsgNombre.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblMsgNombre.setForeground(new java.awt.Color(102, 102, 102));

        lblMsgEdad.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblMsgEdad.setForeground(new java.awt.Color(102, 102, 102));

        lblFoto.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setText("Foto");
        lblFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCargarFoto.setBackground(new java.awt.Color(255, 255, 255));
        btnCargarFoto.setText("Cargar imagen");
        btnCargarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarFotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lbltotalcLayout = new javax.swing.GroupLayout(lbltotalc);
        lbltotalc.setLayout(lbltotalcLayout);
        lbltotalcLayout.setHorizontalGroup(
            lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lbltotalcLayout.createSequentialGroup()
                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(btnCargar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(62, 62, 62))
                            .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(lbltotalcLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txttotalc, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6))
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addGap(298, 298, 298))
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefono)
                                    .addComponent(lblEdad)
                                    .addComponent(lblNombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(lbltotalcLayout.createSequentialGroup()
                                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblMsgEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(lblTelefono2)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMsgNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMsgTel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCargarFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(btnAsistio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNoA, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar))
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnAgendar))))
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(lblDebe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtdebe, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(lbltotalcLayout.createSequentialGroup()
                                    .addComponent(btnAbonar)
                                    .addGap(184, 184, 184)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txttotala, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel3)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
        );
        lbltotalcLayout.setVerticalGroup(
            lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lbltotalcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNombre)
                                    .addComponent(lblMsgNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblEdad))
                                    .addComponent(lblMsgEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblTelefono))
                                    .addComponent(lblMsgTel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefono2)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCargarFoto)))
                        .addGap(42, 128, Short.MAX_VALUE))
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgendar)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAsistio)
                                    .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnNoA)
                                        .addComponent(btnCancelar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(lbltotalcLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAbonar)
                            .addComponent(jLabel7)
                            .addComponent(txttotala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(lbltotalcLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txttotalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCargar)
                                .addComponent(jLabel6)))))
                .addGap(38, 38, 38)
                .addGroup(lbltotalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdebe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDebe))
                .addGap(19, 19, 19))
        );

        jmRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/if_Left_Arrow_2125604.png"))); // NOI18N
        jmRegresar.setToolTipText("Atrás");
        jmRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmRegresarMouseClicked(evt);
            }
        });
        jmRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmRegresarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jmRegresar);

        jmEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/353430-32.png"))); // NOI18N
        jmEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmEditarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmEditar);

        jmGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/if_save_32_51415.png"))); // NOI18N
        jmGuardar.setToolTipText("Guardar");
        jmGuardar.setEnabled(false);
        jmGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmGuardarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmGuardar);

        jmHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/history-clock-button (1).png"))); // NOI18N
        jmHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmHistorialMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmHistorial);

        jmHist.setText("Historial Clinico");
        jmHist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmHistMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmHist);

        jmAvances.setText("Avances");
        jmAvances.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmAvancesMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmAvances);

        jmOdontograma.setText("Odontograma");
        jmOdontograma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmOdontogramaMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmOdontograma);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbltotalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbltotalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jmRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmRegresarActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_jmRegresarActionPerformed

    private void jmRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmRegresarMouseClicked
        if(jmRegresar.isEnabled()){
            Paciente obj= new Paciente();
            obj.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jmRegresarMouseClicked
    public void llenartcita(){
        try{
            Statement stmt=cn.createStatement();
            stmt.execute("select*from Citas where Id_p="+id+" order by Fecha;");
            tc.setRowCount(0);
            ResultSet rs=stmt.getResultSet();
            Object  O[]=new Object[2];
            if(rs!=null)
            {
                while(rs.next()){
                   O[0]=rs.getDate("Fecha");
                  O[1]=rs.getString("Hora");
                 tc.addRow(O); 
                  
                
                }
            }else{showMessageDialog(this,"Error");}
            stmt.close();
        }catch(SQLException ex){showMessageDialog(this,ex.getMessage());}
    }
    
    private void bloquearTodo(){
        tblcargos.setEnabled(false);
        tblabonos.setEnabled(false);
        tblcita.setEnabled(false);
        btnAsistio.setEnabled(false);
        btnNoA.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnAgendar.setEnabled(false);
        btnCargar.setEnabled(false);
        btnAbonar.setEnabled(false);
    }
    
    private void desbloquear(){
        tblcargos.setEnabled(true);
        tblabonos.setEnabled(true);
        tblcita.setEnabled(true);
        btnAgendar.setEnabled(true);
        btnCargar.setEnabled(true);
        btnAbonar.setEnabled(true);
    }
    
    String nombre,diagnostico;
    long telefono;
    int edad,id;


    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        txtNombre.setText(nombre);
        txtEdad.setText(edad+"");
        txtTelefono.setText(telefono+"");
        txtDiag.setText(diagnostico);
        conectar();
        debe=Float.parseFloat(txttotalc.getText())-Float.parseFloat(txttotala.getText());
        if(debe==0){
            
        }
        txtdebe.setText(debe+"");
        cargarimageperfil();
    }//GEN-LAST:event_formWindowActivated

    private void btnAbonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbonarActionPerformed
        Abonar dialog = new Abonar(new javax.swing.JFrame(), true);
        dialog.id=this.id;
        dialog.setVisible(true);
    }//GEN-LAST:event_btnAbonarActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        Cargar dialog = new Cargar(new javax.swing.JFrame(), true);
        dialog.id=this.id;
        dialog.setVisible(true);
    }//GEN-LAST:event_btnCargarActionPerformed

    private void txtdebeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdebeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdebeActionPerformed

    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed
        addCita dialog = new addCita(new javax.swing.JFrame(), true);
        dialog.paciente=txtNombre.getText();
        dialog.id=id;
        dialog.setVisible(true);
    }//GEN-LAST:event_btnAgendarActionPerformed

    private void txttotalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalcActionPerformed

    private void txttotalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalaActionPerformed
    public void bloquearcampos()
    {
       txtNombre.setEditable(false);
       txtEdad.setEditable(false);
       txtTelefono.setEditable(false);
       txtDiag.setEditable(false); 
    }
    public void desbloquearcampos(){
       txtNombre.setEditable(true);
       txtEdad.setEditable(true);
       txtTelefono.setEditable(true);
       txtDiag.setEditable(true);
    }
    private void cambiarBotones(){
        if(jmGuardar.isEnabled()){jmGuardar.setEnabled(false);}else{jmGuardar.setEnabled(true);}
        if(jmEditar.isEnabled()){jmEditar.setEnabled(false);}else{jmEditar.setEnabled(true);}
        if(jmHistorial.isEnabled()){jmHistorial.setEnabled(false);}else{jmHistorial.setEnabled(true);}
        if(jmRegresar.isEnabled()){jmRegresar.setEnabled(false);}else{jmRegresar.setEnabled(true);}
        if(jmHist.isEnabled()){jmHist.setEnabled(false);}else{jmHist.setEnabled(true);}
        if(jmAvances.isEnabled()){jmAvances.setEnabled(false);}else{jmAvances.setEnabled(true);}
        if(jmOdontograma.isEnabled()){jmOdontograma.setEnabled(false);}else{jmOdontograma.setEnabled(true);}
    }
    private void bloquearBotones(){
        btnAsistio.setEnabled(false);
        btnNoA.setEnabled(false);
        btnCancelar.setEnabled(false);
        lblMsgNombre.setText("");
        lblMsgEdad.setText("");
        lblMsgTel.setText("");
    }
    
    private void jmEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmEditarMouseClicked
        if(jmEditar.isEnabled()){
            bloquearTodo();
            desbloquearcampos();
            cambiarBotones();
        }
    }//GEN-LAST:event_jmEditarMouseClicked

    private void validar() throws ToothException{
        String n=txtNombre.getText();
        String edad=txtEdad.getText();
        String tel=txtTelefono.getText();
        if(n.equals("")&&edad.equals("")&&tel.equals("")){
            txtNombre.requestFocus();
            throw new ToothException("Introduce los datos");
        }
        else{
            if(n.equals("")){
                throw new ToothException("Introduce el nombre");
            }
            else{
                if(edad.equals("")){
                    throw new ToothException("Introduce la edad");
                }
                else{
                    if(tel.equals("")){
                        throw new ToothException("Introduce un numero de telefono");
                    }
                }
            }
        }
    }//validar
    
    private void validarNombre()throws ToothException{
        String inv="1234567890,.-{}´+/*_:;][*¨=)(/&%$#!?¡";
        String cad=txtNombre.getText();
        String N[]=cad.split(" ");
        if(cad.equals("")){
                txtNombre.requestFocus();
                throw new ToothException("Introduce el nombre");
        }
        for(int i=0;i<cad.length();i++){
            if(inv.indexOf(cad.substring(i,i+1))!=-1){
                txtNombre.requestFocus();
                throw new ToothException("¡Error!\nIntroduce solo letras");
            }
        }
        if(N.length<2){
            txtNombre.requestFocus();
            throw new ToothException("Nombre no valido.\nEjemplo: Enrique Peña Nieto");
        }
    }
    
    private void validarEdad()throws ToothException{
        String val="1234567890";
        String edad=txtEdad.getText();
        if(edad.equals("")){
                txtNombre.requestFocus();
                throw new ToothException("Introduce la edad");
        }
        for(int i=0;i<edad.length();i++){
            if(val.indexOf(edad.substring(i,i+1))==-1){
                txtEdad.requestFocus();
                throw new ToothException("¡Error!\nEdad no valida");
            }
        }
        if(Integer.parseInt(edad)<0||Integer.parseInt(edad)>105){
            txtEdad.requestFocus();
            throw new ToothException("¡Error!\nEdad no valida");
        }
    }
    
    private void validarTel()throws ToothException{
        String val="1234567890";
        String tel=txtTelefono.getText();
        for(int i=0;i<tel.length();i++){
            if(val.indexOf(tel.substring(i,i+1))==-1){
                txtTelefono.requestFocus();
                lblDebe.setForeground(Color.red);
                throw new ToothException("¡Error!\nSolo puedes introducir numeros.");
            }
        }
        if(tel.length()==0){
            txtTelefono.requestFocus();
            lblDebe.setForeground(Color.red);
            throw new ToothException("Introduce un numero de telefono");
        }else{
            if(tel.length()!=10){
                txtTelefono.requestFocus();
                lblDebe.setForeground(Color.red);
                throw new ToothException("¡Error!\nNumero de telefono no valido.");
            }
        }
    }
    
    private void jmGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmGuardarMouseClicked
        if(jmGuardar.isEnabled()){
            try{
                validar();
                validarNombre();
                validarEdad();
                validarTel();
                bloquearcampos();
                desbloquear();
                try{
                    String cad="";
                    Statement stmt=cn.createStatement();
                    cad="UPDATE Paciente set Nombre='"+txtNombre.getText()+"',Edad="+txtEdad.getText()+",Telefono="+txtTelefono.getText()+",Diagnostico='"+txtDiag.getText()+"' where Id="+id+";";
                    stmt.executeUpdate(cad);
                    stmt.close();  
                    diagnostico=txtDiag.getText();
                    cambiarBotones();                    
                }catch(SQLException ex){
                    showMessageDialog(this,"Error al actualizar datos");
                }
            }catch(ToothException e){
                showMessageDialog(this,e.getMessage());
            }
        }
    }//GEN-LAST:event_jmGuardarMouseClicked

    private void btnAsistioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsistioActionPerformed
        if(jmEditar.isEnabled()){
            if(tblcita.getSelectedRow()==-1){return;}
            guardarenhistorial("Asistio");
            eliminarcita();
        }else{
            jmGuardar.requestFocus();
            showMessageDialog(this,"Primero guarda el archivo");
        }
    }//GEN-LAST:event_btnAsistioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if(jmEditar.isEnabled()){
            Object [] opciones ={"Aceptar","Cancelar"};
            int eleccion = showOptionDialog(rootPane,"¿Cancelar cita?","Confirmar",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
            if (eleccion == YES_OPTION){
                if(tblcita.getSelectedRow()==-1){
                    return;
                }
                guardarenhistorial("Cancelada");
                eliminarcita();
            }else{}
        }else{
            jmGuardar.requestFocus();
            showMessageDialog(this,"Primero guarda el archivo");
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void guardarenhistorial(String estado)
    {
      String cad="";
   
        try
        {
           Statement stmt=cn.createStatement();
           int c=tblcita.getSelectedRow();
           cad="insert into HistorialCitas (Id_paciente,Fecha_cita,Hora,Estado,Fecha) values ("+id+",DateValue('"+tblcita.getValueAt(c, 0)+"'),'"+tblcita.getValueAt(c, 1)+"','"+estado+"',DateValue('"+fechaactual+"'));";
           //showMessageDialog(this,cad);
           stmt.executeUpdate(cad);
           stmt.close(); 
        }catch(SQLException ex){showMessageDialog(this,"Error al insertar");}    
    }
    public void eliminarcita()
    {
        String cad="";  
        try
        {
            int c=tblcita.getSelectedRow();  
           Statement stmt=cn.createStatement();
           cad="delete * from Citas where Fecha=DateValue('"+tblcita.getValueAt(c, 0)+"') and Hora='"+tblcita.getValueAt(c, 1)+"'and Id_p="+id;
           //showMessageDialog(this,cad);
           stmt.executeUpdate(cad);
           stmt.close();    
           tc.removeRow(tblcita.getSelectedRow());
        }catch(SQLException ex){showMessageDialog(this,"Error al eliminar");}
        
    }
    private void btnNoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoAActionPerformed
        if(jmEditar.isEnabled()){
            if(tblcita.getSelectedRow()==-1){
                return;
            }
            guardarenhistorial("No asistio");
            eliminarcita();
        }else{
            jmGuardar.requestFocus();
            showMessageDialog(this,"Primero guarda el archivo");
        }
    }//GEN-LAST:event_btnNoAActionPerformed

    private void jmHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmHistorialMouseClicked
        if(jmHistorial.isEnabled()){
            HistorialCitas obj=new HistorialCitas();
            obj.id=this.id;
            obj.nombre=this.nombre;
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jmHistorialMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Object [] opciones ={"Aceptar","Cancelar"};
        int eleccion = showOptionDialog(rootPane,"¿Seguro que quieres salir?","Salir",YES_NO_OPTION,QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == YES_OPTION){
            System.exit(0);
        }else{}
    }//GEN-LAST:event_formWindowClosing

    private void lbltotalcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbltotalcMouseClicked
        bloquearBotones();
    }//GEN-LAST:event_lbltotalcMouseClicked

    private void tblcitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcitaMouseClicked
        btnAsistio.setEnabled(true);
        btnNoA.setEnabled(true);
        btnCancelar.setEnabled(true);
    }//GEN-LAST:event_tblcitaMouseClicked

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        char e=evt.getKeyChar();
        if((e<'a'||e>'z')&&(e<'A'||e>'Z')&&(e!=' ')){
            evt.consume();
            lblMsgNombre.setText("Solo letras");
        }else{
            lblMsgNombre.setText("");
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtEdadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyTyped
        validarKeyCampos(evt,"Edad");
    }//GEN-LAST:event_txtEdadKeyTyped

    private void validarKeyCampos(KeyEvent evt,String type){
        char e=evt.getKeyChar();
        if(e<'0'||e>'9'){
            evt.consume();
            if(type.equals("Tel")){
                lblMsgTel.setText("Solo numeros");
            }else{
                lblMsgEdad.setText("Solo numeros");
            }
        }else{
            if(type.equals("Tel")&& (txtTelefono.getText().length()>=10)){
                evt.consume();
            }else{
                if(type.equals("Edad")&& (txtEdad.getText().length()>=4)){
                    evt.consume();
                }
            }
            lblMsgEdad.setText("");
            lblMsgTel.setText("");
        }
    }
    
    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        validarKeyCampos(evt,"Tel");
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void jmHistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmHistMouseClicked
        if(jmGuardar.isEnabled()==false){
            vHistorialClinico obj=new vHistorialClinico();
            obj.id=this.id;
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jmHistMouseClicked
String i1="";
    private void btnCargarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarFotoActionPerformed
        int resultado;
        CargarFoto ventana=new CargarFoto();
        FileNameExtensionFilter filtro= new FileNameExtensionFilter("JPG y PNG","JPG","jpg");
        ventana.jfcImagen.setFileFilter(filtro);
        resultado=ventana.jfcImagen.showOpenDialog(null);
        if(JFileChooser.APPROVE_OPTION == resultado){
            fichero = ventana.jfcImagen.getSelectedFile();
            try{
                ImageIcon icon=new ImageIcon(fichero.toString());
                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), Image.SCALE_DEFAULT));
                lblFoto.setText(null);
                lblFoto.setIcon(icono);
                i1=fichero.toString();
                Guardar();
            }catch(Exception e){
                showMessageDialog(this,"Error al abrir la imagen\nCodigo de error: "+e);
            }
        }
    }//GEN-LAST:event_btnCargarFotoActionPerformed
private void Guardar()
    {
        String cad="";
        try{
            
            Statement stmt=cn.createStatement();
            cad="insert into ImagenPerfil(Id_paciente,Img) values ("+id+",'"+i1+"');";
            //showMessageDialog(this,cad);
            stmt.executeUpdate(cad);
            stmt.close(); 
            
        }catch(SQLException ex){
            showMessageDialog(this,"Error al insertar");
        }catch(ToothException e){
            showMessageDialog(this, e.getMessage());
        }
        
    }
private void cargarimageperfil()       
{
 try{
            
            Statement stmt=cn.createStatement();
            stmt.execute("select*from ImagenPerfil where Id_paciente="+id);
            ResultSet rs=stmt.getResultSet();
            if(rs!=null){
                while(rs.next()){
                    i1=rs.getString("Img");
                    if(i1.equals("")){
                    }else{
                        ImageIcon icon=new ImageIcon(i1);
                        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), Image.SCALE_DEFAULT));
                        lblFoto.setText(null);
                        lblFoto.setIcon(icono);
                    }
                }
            }else{showMessageDialog(this,"Error");}
            stmt.close();
        }catch(SQLException ex){showMessageDialog(this,ex.getMessage());}
}
    private void jmAvancesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmAvancesMouseClicked
        if(jmGuardar.isEnabled()==false){
            Avances obj=new Avances();
            obj.id=this.id;
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jmAvancesMouseClicked

    private void jmOdontogramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmOdontogramaMouseClicked
        if(jmGuardar.isEnabled()==false){
            vOdontograma obj=new vOdontograma();
            obj.id=this.id;
            obj.nombre=this.nombre;
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jmOdontogramaMouseClicked
    public void llenarcargos()
    {
      try{
            Statement stmt=cn.createStatement();
            stmt.execute("select*from Movimientos where Id_paciente="+id+" and Tipo='Cargo';");
            tcargos.setRowCount(0);
            ResultSet rs=stmt.getResultSet();
            Object  O[]=new Object[3];
            if(rs!=null)
            {
                while(rs.next()){
                   O[0]=rs.getString("Descripcion");
                  O[1]=rs.getFloat("Monto");
                  O[2]=rs.getDate("Fecha");
                 tcargos.addRow(O); 
                }
            }else{showMessageDialog(this,"Error");}
            stmt.close();
      }catch(SQLException ex){showMessageDialog(this,ex.getMessage());}  
      float total=0;
      for(int i=0;i<tcargos.getRowCount();i++)
      {
          total+=Float.parseFloat(tcargos.getValueAt(i, 1).toString());
      }
      txttotalc.setText(total+"");
    }
    public void llenarabonos()
    {
      try{
            Statement stmt=cn.createStatement();
            stmt.execute("select*from Movimientos where Id_paciente="+id+" and Tipo='Abono';");
            tabonos.setRowCount(0);
            ResultSet rs=stmt.getResultSet();
            Object  O[]=new Object[3];
            if(rs!=null)
            {
                while(rs.next()){
                   O[0]=rs.getString("Descripcion");
                  O[1]=rs.getFloat("Monto");
                  O[2]=rs.getDate("Fecha");
                 tabonos.addRow(O); 
                  
                
                }
            }else{showMessageDialog(this,"Error");}
            stmt.close();
      }catch(SQLException ex){showMessageDialog(this,ex.getMessage());}  
      float totala=0;
      for(int i=0;i<tabonos.getRowCount();i++)
      {
          totala+=Float.parseFloat(tabonos.getValueAt(i, 1).toString());
      }
      txttotala.setText(totala+"");
    }
     public void conectar()
    {
        
       String dbURL="jdbc:ucanaccess://C:\\ToothCenter\\ToothCenterBD.accdb";
       
        try {
            cn=DriverManager.getConnection(dbURL,"","");
            System.out.println("Conectado");
        } catch (SQLException ex) {
            Logger.getLogger(Paciente.class.getName()).log(Level.SEVERE, null, ex);
        }
        llenartcita();
        llenarcargos();
        llenarabonos();
 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevaCita().setVisible(true);
            }
        });
    }
    String ruta;
    File fichero;
    private String fechaactual;
    private  float debe=0;
    private java.sql.Connection cn;
    private DefaultTableModel tc;
    private DefaultTableModel tcargos;
    private DefaultTableModel tabonos;
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbonar;
    private javax.swing.JButton btnAgendar;
    private javax.swing.JButton btnAsistio;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnCargarFoto;
    private javax.swing.JButton btnNoA;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenu jmAvances;
    private javax.swing.JMenu jmEditar;
    private javax.swing.JMenu jmGuardar;
    private javax.swing.JMenu jmHist;
    private javax.swing.JMenu jmHistorial;
    private javax.swing.JMenu jmOdontograma;
    private javax.swing.JMenu jmRegresar;
    private javax.swing.JLabel lblDebe;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblMsgEdad;
    private javax.swing.JLabel lblMsgNombre;
    private javax.swing.JLabel lblMsgTel;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTelefono2;
    private javax.swing.JPanel lbltotalc;
    private javax.swing.JTable tblabonos;
    private javax.swing.JTable tblcargos;
    private javax.swing.JTable tblcita;
    private javax.swing.JTextArea txtDiag;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtdebe;
    private javax.swing.JTextField txttotala;
    private javax.swing.JTextField txttotalc;
    // End of variables declaration//GEN-END:variables
}
